version: "3.9"
services:
  #Database
  db-mongo:
    container_name: ${DB_HOST}
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_NAME}
    volumes:
      - db-data:/data/db:rw
      - ./init-mongo-db:/docker-entrypoint-initdb.d
    ports:
      - "${DB_PORT}:${DB_PORT}"
  # App
  app:
    container_name: "dev-api"
    environment:
      - APP_PORT=${APP_PORT}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - WAIT_HOSTS=${DB_HOST}:${DB_PORT}
      - WAIT_HOSTS_TIMEOUT=${DB_WAIT_TIMEOUT}
      - WAIT_SLEEP_INTERVAL=${DB_WAIT_SLEEP}
      - WAIT_HOST_CONNECT_TIMEOUT=${DB_CONNECT_TIMEOUT}
    restart: always
    build: .
    # Workaround for having live app code and node-modules for alpine intact
    volumes:
      - .:/usr/src/app
      - node-modules:/usr/src/app/node_modules
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      - db-mongo

volumes:
  # Will persist database in container
  db-data: {}
  # Will persist and give priority to alpine node_modules install instead of local node_modules
  node-modules: {}
